/*! HTML */
/*? JUNIOR */
/*
 1 Структура HTML 
 2 Теги і атрибути
 3 Семантична розмітка
 4 HTML5 нововведення
 5 Валідність і доступність
 6 Робота з медіа
 7 Кросбраузерна сумісність
 8 Робота зі стилями
 9 Практичні приклади
 */

/*? питання з DOU */
/*
  1 Що таке DOCTYPE і навіщо його використовують?
  2 Які основні теги структури HTML-сторінки?
  3 Що таке семантичні теги та навіщо вони потрібні? Наведіть приклади таких тегів.
  4 Що можете сказати про тег <br>?
  5 Які теги з найсвіжіших оновлень ви знаєте?
  6 У чому різниця між <div> і <span>.
  7 Що таке data-атрибути, в яких випадках їх використовуєте?
  8 Як використовують атрибути class та id? Яка різниця між класами та ідентифікаторами?
  9 Що таке внутрішні та зовнішні гіперпосилання і які вони мають атрибути?
  10 Що ви знаєте про SVG? Які є варіанти додавання SVG на сторінки сайту? Чим вони відрізняються?
  11 Як створити форму в HTML і забезпечити її валідацію?
  12 Які є типи списків у HTML? Що таке ul / ol / dl?
  13 Що таке iframe і для чого його використовують?
  14 Які методи відправки даних форми ви знаєте?
  15 Які основні відмінності між блоковими та вбудованими елементами в HTML? Як вони впливають на структуру сторінки? 
*/


/* *Теорія */
/* *Структура HTML: */
/* 
 ?Розуміння загальної структури HTML-документа:
  Елементи <html>, <head>, <body> і їхнє призначення:

  *1Яке призначення <html>, <head>, <body>?
  Елемент <html> є кореневим елементом документа і обгортає весь вміст сторінки.

  Елемент <head> містить метадані та інформацію, яка не відображається на веб-сторінці безпосередньо, такі як заголовок документа, мета-теги,  зовнішні стилі, підключені скрипти та інше.
  
  Елемент <body> містить основний вміст сторінки, який відображається в браузері, такі як текст, зображення, відео, таблиці та інші елементи.

  *2Що таке HTML і яка його основна функція?
  **Відповідь: HTML – це мова розмітки, яка використовується для створення веб-сторінок. Основна функція HTML –  визначати структуру і зміст веб-документів, таких як текст, зображення, посилання, списки та інше.

  *3Що таке HTML-документ і з яких основних частин він складається?
  **Відповідь: HTML-документ складається з двох основних частин: <head> і <body>. В <head> містяться метадані про   документ, такі як заголовок, посилання на стилі та скрипти. В <body> знаходиться весь контент, який   відображається на веб-сторінці.
  
  *4Що таке DOCTYPE і чому він важливий?
  **Відповідь: DOCTYPE – це декларація, яка вказує браузеру, яку версію HTML використовує документ. Це допомагає   браузеру коректно відображати сторінку. Для HTML5 використовується <!DOCTYPE html>.
 */

/* *Теги і атрибути: */
/* 
 ?Знання основних HTML-тегів (наприклад, <div>, <p>, <a>, <img>) та їх використання, а також розуміння атрибутів (наприклад, href, src, id, class).

 *1  Різниця між тегами <div> та <span>. В яких випадках ви використовуєте кожен з них?
 **Відповідь: <div> використовується для групування блокових елементів, тоді як <span> — для групування  стрічкових елементів. <div> зазвичай використовується для створення блоків контенту, таких як секції або  контейнери, тоді як <span> використовується для стилізації або зміни виду окремих текстових частин або  інших елементів в межах рядка.
 
 *2 Як ви використовуєте тег <a> для створення гіперпосилання? Які атрибути зазвичай використовуються з цим  тегом, і як вони впливають на його поведінку?
 **Відповідь: Тег <a> використовується для створення гіперпосилань. Основний атрибут, який  використовується з ним, це href, який вказує адресу сторінки або ресурсу, на який веде посилання. Крім  того, можуть використовуватись атрибути для зміни відображення посилання, такі як target для вказівки, де  відкривати посилання (наприклад, у новому вікні чи вкладці).
 
 *3 Що таке атрибут href в контексті тега <a>? Які значення може приймати цей атрибут, і для чого вони  використовуються?
 Відповідь: Атрибут href вказує адресу (URL) сторінки або ресурсу, на який веде гіперпосилання. Він може  приймати значення URL, які вказують на інші веб-сторінки, файли або інші ресурси в Інтернеті.
 
 *4 Як ви вбудовуєте зображення за допомогою тегу <img>? Які атрибути ви зазвичай використовуєте з ним, і як  вони впливають на відображення зображення?
 **Відповідь: Тег <img> використовується для вбудовування зображень. Основний атрибут це src, який вказує  шлях до зображення. Додатково можна використовувати атрибути, такі як alt для текстового опису зображення  (для доступності та SEO) і width та height для вказівки розмірів зображення.
 
 *5 Як ви створюєте список за допомогою тегів <ul>, <ol> та <li>?
 Відповідь: Тег <ul> використовується для створення ненумерованого списку, <ol> — для нумерованого списку,  а <li> — для елементів списку.
 
 *6 Як ви використовуєте атрибут id в HTML? Як він відрізняється від атрибуту class, і в яких випадках ви  використовуєте кожен з них?
 Відповідь: Атрибут id використовується для унікальної ідентифікації елемента на сторінці. Він повинен  бути унікальним на всій сторінці. Атрибут class використовується для групування елементів з однаковими  стилізацією або для забезпечення їхнього доступу за допомогою JavaScript або CSS.
 
 *7 Як ви використовуєте тег <table> для створення таблиці? Які інші теги і атрибути використовуються разом з  ним для визначення заголовків, рядків і стовпців?
 Відповідь: Тег <table> використовується для створення таблиці. Для визначення заголовків <thead>, рядків і  стовпців використовуються теги <th> для заголовків і <tr> для рядків, комірка <td>
 <table>
    <thead>
        <tr>
            <th>Ім'я</th>
            <th>Вік</th>
            <th>Місто</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Іван</td>
            <td>25</td>
            <td>Київ</td>
        </tr>
        <tr>
            <td>Марія</td>
            <td>30</td>
            <td>Львів</td>
        </tr>
        <tr>
            <td>Олексій</td>
            <td>35</td>
            <td>Одеса</td>
        </tr>
    </tbody>
</table>

 *8 Як ви використовуєте теги <header>, <nav>, <section> та <footer> для структури сторінки?
 Відповідь: Теги <header>, <nav>, <section> та <footer> використовуються для створення семантичної  структури сторінки. <header> вказує на верхню частину сторінки, <nav> — на навігаційний блок, <section> —  на секцію контенту, а <footer> — на нижню частину сторінки.
 
 *9 Як ви вбудовуєте відео або аудіо за допомогою HTML5 тегів? Які атрибути ви зазвичай використовуєте для  керування відтворенням?
 Відповідь: Відео або аудіо можна вбудувати за допомогою тегів <video> або <audio>. Для керування  відтворенням зазвичай використовуються атрибути controls для відображення елементів керування (наприклад,  кнопок Play/Pause), autoplay для автоматичного відтворення при завантаженні сторінки, loop для повторного  відтворення, і src для вказівки шляху до відео або аудіофайлу.
 */


/* *Семантична розмітка: */
/* 
  Знання про семантичні теги HTML, такі як <header>, <nav>, <section>, <article>, <footer> та їх   використання для кращої структури сторінок.
 
  *1Що таке семантична розмітка в HTML?
  Семантична розмітка використовує елементи HTML, які мають конкретне значення і описують структуру та    зміст документа, що робить його більш зрозумілим для браузерів та пошукових систем.
  Які основні семантичні елементи HTML5?
  
  <header>: Описує заголовок розділу або сторінки, зазвичай містить навігацію або логотип.
  <nav>: Визначає навігаційне меню.
  <main>: Основний вміст сторінки, унікальний для конкретної сторінки.
  <section>: Розділ, який логічно групує пов’язаний вміст.
  <article>: Незалежний фрагмент вмісту, який можна розповсюджувати окремо.
  <aside>: Вміст, що доповнює основний, наприклад, сайдбари.
  <footer>: Нижній колонтитул розділу або сторінки, містить інформацію про автора, навігаційні посилання    тощо.
  <figure> і <figcaption>: Використовується для позначення ілюстрацій, діаграм або інших медіа з підписами.
  
  *2Чому важливо використовувати семантичну розмітку?
  Покращує доступність: Семантичні елементи допомагають екранним читалкам зрозуміти структуру сторінки.
  SEO (пошукова оптимізація): Пошукові системи краще індексують сторінки з чіткою семантичною структурою.
  Підтримка: Код стає більш читабельним і зрозумілим для розробників.
  
  *3Чим <section> відрізняється від <div>?
  <section> є семантичним елементом, який використовується для групування пов’язаного вмісту, а <div> є    чисто контейнерним елементом, що не несе семантичного значення.
  
  *4Коли слід використовувати <article>?
  <article> використовується для самостійного вмісту, який може бути окремо розповсюджений, наприклад,    блог-пости, новинні статті, форуми тощо.
  
  *5Яка роль <header> і <footer>? 
  <header> використовується для введення інформації про заголовок, навігаційні посилання, а також логотипи.
  <footer> містить додаткову інформацію про розділ або сторінку, включаючи контактні дані, авторські  права   та навігаційні посилання.
  
  *6Що таке <aside> і коли його використовувати? 
  <aside> використовується для вмісту, який є доповненням до основного вмісту сторінки, наприклад,  бокові   панелі, блоги або додаткові ресурси.

  *7Як використовувати <main>?
  <main> використовується для основного вмісту документа. Сторінка може мати лише один <main> елемент, і    він не повинен включати в себе <header>, <footer>, <nav>, <aside>.

  *8Чому <nav> важливий для навігації?
  <nav> визначає набір навігаційних посилань, що допомагає користувачам та пошуковим системам зрозуміти,    які посилання є основними для навігації по сайту.

  *9Що таке <figure> і <figcaption> і як їх використовувати?
  <figure> використовується для групування медіа-вмісту з підписами, такими як зображення, діаграми чи код.
  <figcaption> додає підпис до вмісту, який міститься в <figure>:
 */


/*
*HTML5 нововведення:
 Розуміння нових можливостей HTML5, таких як аудіо та відео вбудування, графіка за допомогою <canvas>, геолокація та інші API.

*Валідність і доступність:
 Знання про важливість створення валідного HTML-коду, який відповідає стандартам, а також про доступність веб-сторінок для людей з обмеженими можливостями.

*Робота з медіа:
 Розуміння різних способів вбудовування зображень, відео та аудіо в HTML-сторінки, а також знання про оптимізацію цих ресурсів для швидкої завантаження.

*Кросбраузерна сумісність:
 Розуміння того, як різні браузери інтерпретують HTML-код і як забезпечити його правильну роботу на різних платформах і браузерах.

*Робота зі стилями:
 Часто співбесіди по фронтенду також включають питання про CSS, тому добре мати базове розуміння каскадних таблиць стилів і їх використання в поєднанні з HTML.

*Практичні приклади:
 Можливо, вам будуть давати завдання на написання конкретних частин HTML-коду або створення простих веб-сторінок.
 */


/* *Практична частина */
/* 1 Задати body 100vh висоти 
Відповіть: використання min-height: 100vh замість height: 100vh гарантує, що body завжди займатиме принаймні всю висоту вікна браузера, але також може розтягуватися, щоб вмістити додатковий вміст, якщо це необхідно./