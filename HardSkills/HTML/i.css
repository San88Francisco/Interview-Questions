/*! HTML */
/*? JUNIOR */
/*
 1 Структура HTML 
 2 Теги і атрибути
 3 Форми
 4 Семантична розмітка
 5 HTML5 нововведення
 6 Валідність і доступність
 7 Робота з медіа
 8 Кросбраузерна сумісність
 9 Робота зі стилями
 10 Практичні приклади
 */

/*? питання з DOU */
/*
  1 Що таке DOCTYPE і навіщо його використовують?
  2 Які основні теги структури HTML-сторінки?
  3 Що таке семантичні теги та навіщо вони потрібні? Наведіть приклади таких тегів.
  4 Що можете сказати про тег <br>?
  5 Які теги з найсвіжіших оновлень ви знаєте?
  6 У чому різниця між <div> і <span>.
  7 Що таке data-атрибути, в яких випадках їх використовуєте?
  8 Як використовують атрибути class та id? Яка різниця між класами та ідентифікаторами?
  9 Що таке внутрішні та зовнішні гіперпосилання і які вони мають атрибути?
  10 Що ви знаєте про SVG? Які є варіанти додавання SVG на сторінки сайту? Чим вони відрізняються?
  11 Як створити форму в HTML і забезпечити її валідацію?
  12 Які є типи списків у HTML? Що таке ul / ol / dl?
  13 Що таке iframe і для чого його використовують?
  14 Які методи відправки даних форми ви знаєте?
  15 Які основні відмінності між блоковими та вбудованими елементами в HTML? Як вони впливають на структуру сторінки? 
*/


/* *Структура HTML: */
/* 
 *Розуміння загальної структури HTML-документа:
  елементи <html>, <head>, <body>, тощо.

  Елемент <html> є кореневим елементом документа і обгортає весь вміст сторінки.

  Елемент <head> містить метадані та інформацію, яка не відображається на веб-сторінці безпосередньо, такі як заголовок документа, мета-теги,  зовнішні стилі, підключені скрипти та інше.
  
  Елемент <body> містить основний вміст сторінки, який відображається в браузері, такі як текст, зображення, відео, таблиці та інші елементи.
 */

/* *Теги і атрибути: */
/* 
 ?Знання основних HTML-тегів (наприклад, <div>, <p>, <a>, <img>) та їх використання, а також розуміння атрибутів (наприклад, href, src, id, class).

 1 Різниця між тегами <div> та <span>. В яких випадках ви використовуєте кожен з них?
 
 **Відповідь: <div> використовується для групування блокових елементів, тоді як <span> — для групування  стрічкових елементів. <div> зазвичай використовується для створення блоків контенту, таких як секції або  контейнери, тоді як <span> використовується для стилізації або зміни виду окремих текстових частин або  інших елементів в межах рядка.
 
 2 Як ви використовуєте тег <a> для створення гіперпосилання? Які атрибути зазвичай використовуються з цим  тегом, і як вони впливають на його поведінку?
 
 **Відповідь: Тег <a> використовується для створення гіперпосилань. Основний атрибут, який  використовується з ним, це href, який вказує адресу сторінки або ресурсу, на який веде посилання. Крім  того, можуть використовуватись атрибути для зміни відображення посилання, такі як target для вказівки, де  відкривати посилання (наприклад, у новому вікні чи вкладці).
 
 3 Як ви вбудовуєте зображення за допомогою тегу <img>? Які атрибути ви зазвичай використовуєте з ним, і як  вони впливають на відображення зображення?
 
 **Відповідь: Тег <img> використовується для вбудовування зображень. Основний атрибут це src, який вказує  шлях до зображення. Додатково можна використовувати атрибути, такі як alt для текстового опису зображення  (для доступності та SEO) і width та height для вказівки розмірів зображення.
 
 4 Що таке атрибут href в контексті тега <a>? Які значення може приймати цей атрибут, і для чого вони  використовуються?
 
 Відповідь: Атрибут href вказує адресу (URL) сторінки або ресурсу, на який веде гіперпосилання. Він може  приймати значення URL, які вказують на інші веб-сторінки, файли або інші ресурси в Інтернеті.
 
 5 Як ви створюєте список за допомогою тегів <ul>, <ol> та <li>?
 
 Відповідь: Тег <ul> використовується для створення ненумерованого списку, <ol> — для нумерованого списку,  а <li> — для елементів списку.
 
 6 Як ви використовуєте атрибут id в HTML? Як він відрізняється від атрибуту class, і в яких випадках ви  використовуєте кожен з них?
 
 Відповідь: Атрибут id використовується для унікальної ідентифікації елемента на сторінці. Він повинен  бути унікальним на всій сторінці. Атрибут class використовується для групування елементів з однаковими  стилізацій або для забезпечення їхнього доступу за допомогою JavaScript або CSS.
 
 7 Як ви використовуєте тег <table> для створення таблиці? Які інші теги і атрибути використовуються разом з  ним для визначення заголовків, рядків і стовпців?
 
 Відповідь: Тег <table> використовується для створення таблиці. Для визначення заголовків, рядків і  стовпців використовуються теги <th> для заголовків і <tr> для рядків.
 
 8 Як ви використовуєте теги <header>, <nav>, <section> та <footer> для структури сторінки?
 
 Відповідь: Теги <header>, <nav>, <section> та <footer> використовуються для створення семантичної  структури сторінки. <header> вказує на верхню частину сторінки, <nav> — на навігаційний блок, <section> —  на секцію контенту, а <footer> — на нижню частину сторінки.
 
 9 Як ви вбудовуєте відео або аудіо за допомогою HTML5 тегів? Які атрибути ви зазвичай використовуєте для  керування відтворенням?
 
 Відповідь: Відео або аудіо можна вбудувати за допомогою тегів <video> або <audio>. Для керування  відтворенням зазвичай використовуються атрибути controls для відображення елементів керування (наприклад,  кнопок Play/Pause), autoplay для автоматичного відтворення при завантаженні сторінки, loop для повторного  відтворення, і src для вказівки шляху до відео або аудіофайлу.
 */


/* 
*Форми:
 Розуміння тегів для створення форм (<form>, <input>, <button>, <select>, <textarea>) і їхніх атрибутів.

*Семантична розмітка:
 Знання про семантичні теги HTML, такі як <header>, <nav>, <section>, <article>, <footer> та їх використання для кращої структури сторінок.

*HTML5 нововведення:
 Розуміння нових можливостей HTML5, таких як аудіо та відео вбудування, графіка за допомогою <canvas>, геолокація та інші API.

*Валідність і доступність:
 Знання про важливість створення валідного HTML-коду, який відповідає стандартам, а також про доступність веб-сторінок для людей з обмеженими можливостями.

*Робота з медіа:
 Розуміння різних способів вбудовування зображень, відео та аудіо в HTML-сторінки, а також знання про оптимізацію цих ресурсів для швидкої завантаження.

*Кросбраузерна сумісність:
 Розуміння того, як різні браузери інтерпретують HTML-код і як забезпечити його правильну роботу на різних платформах і браузерах.

*Робота зі стилями:
 Часто співбесіди по фронтенду також включають питання про CSS, тому добре мати базове розуміння каскадних таблиць стилів і їх використання в поєднанні з HTML.

*Практичні приклади:
 Можливо, вам будуть давати завдання на написання конкретних частин HTML-коду або створення простих веб-сторінок.
 */